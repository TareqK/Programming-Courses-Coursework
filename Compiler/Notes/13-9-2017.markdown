# Reaons to study Programming Language Concepts

1. To increase the ability to learn new languages

2. Knowing the structure of a programming language makes it easier to understand.

3. To increase the ability to design new languages.for example it is known that
the if...else structure is ambigious. This means that the compiler does not 
know which direction to take when parsing it. In a case like this, the designer
must take into consideration ambiguity when putting down production rules

4. It is an overall advancement in computing 

# What is a Programming Language?

A language is a system of signs used to commuincate.(This definition also 
includes spoken language). All languages have grammar and vocabulary. Grammar
is how we express a language. It is a specific set of rules(with some 
exceptions in some cases). 

Programming languages are the same, they have a set of rules, called Production
rules, which are its grammar. The main difference between spoken languages
and written languages is that the rules are hard ie there are no exceptions
to rules.

This leads us to a general defenition:

	A Programming language is 
	a system of signs used 
	by a person to communicate
	with the computer machine.  

Or a more specific defenition:

	A Programming language is
	a notational system  for 
	describing **COMPUTATION**
	in **MACHINE READABLE** and
	**HUMAN READABLE** form.

There are three Key concepts in this defenition:

1. Computation 

All what computers about. This is everything that happens
in a computer on a low level regardless of the application. Everything we 
know in programming is eventually simplified into small computational 
operations(Arithematic operations).

2. Machine Readable 

There must be an algorithm to translate the programming 
language code in an *unambigous* and *finite* way. The algorithm must be 
simple and straight-forward, and usually  takes time proportional to the size
of the program. Machine Readability is ensured by restricting the structure of
the programming language(syntax) to a *context-free grammar*(CFG) which is a 
system/model to express the syntax of the programming language. Because of such
a system, we can create algorithms for translators in a way that produce 
something machine readable.    

3. Human Readable

A Very important aspect of a program is to be readable. This
began with high-level languages. A Programming Language must provide
*abstraction* as 
Data Abstraction :
	Which means giving variables and such names.
	
	A.Simple : such as "iteger" or "int" or "char" 
	B.Structured : such as arrays or strings
   		
Control Abstraction :
	Which means clarifying operations.
		
	A.Simple : Such as the Assignment Statement "=" or ":"
	B.Structured : which is divided to a group of instruction
		     or assignment statementsSuch as "if/else",
   		     "for", "while", Block statements. 

For a  more percise and complete defenition of programming languages, instead of a
variable defenition, A Programming language can be divided into 2 parts:

	1. Syntax, or the structure.

	2. Symantics, or the meaning. 

This is considered a concrete defenition of a programming langauge.
